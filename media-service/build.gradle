import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.openapi.generator" version "6.6.0"
}

group = 'com.ychat'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	// implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	implementation 'junit:junit:4.13.1'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.4'
	implementation 'io.swagger:swagger-annotations:1.6.8'
	implementation group: 'jakarta.validation', name: 'jakarta.validation-api', version: '3.0.2'
	implementation group: 'org.hibernate.validator', name: 'hibernate-validator', version: '8.0.1.Final'

	implementation group: 'com.google.firebase', name: 'firebase-admin', version: '9.2.0'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	implementation('org.springframework.kafka:spring-kafka')

	implementation 'com.google.firebase:firebase-admin:9.2.0'
}

task openApiGenerateMedia(type: GenerateTask) {
	generatorName.set("spring")
	outputDir.set("$rootDir/generated/openapi/media")
	inputSpec.set("$rootDir/api-specs/media/openapi.yml")
	apiPackage.set("com.openapi.gen.media.api")
	modelPackage.set("com.openapi.gen.media.dto")
	configOptions.set([
			delegatePattern: "true",
			serializableModel: "true",
			useJakartaEe: "true",
			useSpringBoot3: "true",
			useSwaggerUI: "false",
			interfaceOnly: "true",
			documentationProvider: "none",
			performBeanValidation: "true",
			useBeanValidation: "true",
			dateLibrary: "java8-localdatetime"
	])
	typeMappings.set([
			"string+date-time": "LocalDateTime",
			"string+ObjectId": "UUID"
	])
}

task openApiGenerateSocial(type: GenerateTask) {
	generatorName.set("java")
	outputDir.set("$rootDir/generated/openapi/social")
	inputSpec.set("$rootDir/api-specs/social/openapi.yml")
	apiPackage.set("com.openapi.gen.social.api")
	modelPackage.set("com.openapi.gen.social.dto")
	configOptions.set([
			serializableModel: "true",
			useJakartaEe: "true",
			documentationProvider: "none",
			performBeanValidation: "true",
			useBeanValidation: "true",
			dateLibrary: "java8-localdatetime",
			library: "native"
	])
	typeMappings.set([
			"string+date-time": "LocalDateTime",
			"string+ObjectId": "UUID"
	])
}

task generateOpenAPI {
	description = "Generate OpenAPI files"
	dependsOn openApiGenerateMedia, openApiGenerateSocial
}

compileJava {
	dependsOn "generateOpenAPI"
}

clean {
	delete "generated"
}


sourceSets {
	main {
		java {
			srcDirs "src/main/java"
			srcDirs "generated/openapi/media/src/main/java"
			srcDirs "generated/openapi/social/src/main/java"
		}
	}
}