services:
    ychat-frontend:
        container_name: ychat-frontend
        image: 'mrsarius/yc-frontend:latest'
        restart: unless-stopped
        pull_policy: never
        build:
            context: frontend
            dockerfile: Dockerfile
        ports:
          - "3000:80"
    ychat-api-gateway:
        container_name: ychat-api-gateway
        image: 'mrsarius/yc-api-gateway'
        restart: unless-stopped
        pull_policy: never
        build:
            context: api-gateway
            dockerfile: Dockerfile
        environment:
          - ychat.gateway.redirect.target.auth=http://ychat-auth:8080
          - ychat.gateway.redirect.target.social=http://ychat-social:80
          - ychat.gateway.redirect.target.messaging=http://ychat-messaging:8080
          - ychat.gateway.redirect.target.notification=http://ychat-notification:8080
          - ychat.gateway.redirect.target.payment=http://ychat-payment:8080
          - ychat.gateway.redirect.target.media=http://ychat-media:8080
          - ychat.gateway.redirect.target.calling=http://ychat-calling:8080
          - ychat.cors.allowed.url=http://localhost:3000
        ports: 
          - "7500:8080"
    ychat-zookeeper:
        container_name: ychat-zookeeper
        hostname: ychat-zookeeper
        image: 'confluentinc/cp-zookeeper:latest'
        restart: unless-stopped
        ports:
          - "2181:2181"
        environment:
          - ZOOKEEPER_CLIENT_PORT=2181
          - ZOOKEEPER_SERVER_ID=1
          - ZOOKEEPER_TICK_TIME=2000
    ychat-kafka:
        container_name: ychat-kafka
        hostname: ychat-kafka
        image: 'confluentinc/cp-kafka:latest'
        restart: unless-stopped
        depends_on:
          - ychat-zookeeper
        environment:
          - KAFKA_ADVERTISED_LISTENERS=INTERNAL://ychat-kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
          - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
          - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
          - KAFKA_ZOOKEEPER_CONNECT=ychat-zookeeper:2181
          - KAFKA_BROKER_ID=1
          - KAFKA_LOG4J_LOGGERS=kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO
          - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
          - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
          - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
          - KAFKA_JMX_PORT=9999
          - KAFKA_JMX_HOSTNAME=${DOCKER_HOST_IP:-127.0.0.1}
          - KAFKA_AUTHORIZER_CLASS_NAME=kafka.security.authorizer.AclAuthorizer
          - KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND=true
        ports:
          - 29092:29092
          - 9092:9092
          - 9999:9999
    # Messaging Service
    ychat-messaging-db:
        container_name: ychat-messaging-db
        image: 'mongo'
        restart: unless-stopped
        environment:
          - MONGO_INITDB_ROOT_USERNAME=admin
          - MONGO_INITDB_ROOT_PASSWORD=devpw
        ports:
          - "27017:27017"
    ychat-messaging:
        container_name: ychat-messaging
        image: 'mrsarius/yc-messaging'
        restart: unless-stopped
        pull_policy: never
        build:
            context: messaging-service
            dockerfile: Dockerfile
        depends_on:
          - ychat-messaging-db
        environment:
          - spring.data.mongodb.host=ychat-messaging-db
          - spring.data.mongodb.port=27017
          - spring.data.mongodb.username=admin
          - spring.data.mongodb.password=devpw
          - spring.data.mongodb.database=messaging
          - spring.data.mongodb.authentication-database=admin
          - spring.kafka.bootstrap-servers=ychat-kafka:29092
          - spring.kafka.consumer.group-id=messaging
          - spring.kafka.consumer.auto-offset-reset=earliest
          - spring.kafka.listener.poll-timeout=3000
          - spring.kafka.listener.concurrency=3
          - ychat.social.url=http://ychat-social:80
        ports:
          - "7503:8080"
    # Notification Service
    ychat-notification-db:
        container_name: ychat-notification-db
        image: 'mongo'
        restart: unless-stopped
        environment:
          - MONGO_INITDB_ROOT_USERNAME=admin
          - MONGO_INITDB_ROOT_PASSWORD=devpw
        ports:
          - "27018:27017"
    ychat-notification:
        container_name: ychat-notification
        image: 'mrsarius/yc-notification'
        restart: unless-stopped
        pull_policy: never
        build:
            context: notification-service
            dockerfile: Dockerfile
        depends_on:
          - ychat-notification-db
        environment:
          - spring.data.mongodb.host=ychat-notification-db
          - spring.data.mongodb.port=27017
          - spring.data.mongodb.username=admin
          - spring.data.mongodb.password=devpw
          - spring.data.mongodb.database=notification
          - spring.data.mongodb.authentication-database=admin
          - spring.kafka.bootstrap-servers=ychat-kafka:29092
          - spring.kafka.consumer.group-id=notification
          - spring.kafka.consumer.auto-offset-reset=earliest
          - spring.kafka.listener.poll-timeout=3000
          - spring.kafka.listener.concurrency=3
          - ychat.social.url=http://ychat-social:80
        ports:
          - "7504:8080"
    # Calling Service
    ychat-calling-db:
        container_name: ychat-calling-db
        image: 'mongo'
        restart: unless-stopped
        environment:
          - MONGO_INITDB_ROOT_USERNAME=admin
          - MONGO_INITDB_ROOT_PASSWORD=devpw
        ports:
          - "27020:27017"
    ychat-calling:
        container_name: ychat-calling
        image: 'mrsarius/yc-calling'
        restart: unless-stopped
        pull_policy: never
        build:
            context: calling-service
            dockerfile: Dockerfile
        depends_on:
          - ychat-calling-db
        environment:
          - spring.data.mongodb.host=ychat-calling-db
          - spring.data.mongodb.port=27020
          - spring.data.mongodb.username=admin
          - spring.data.mongodb.password=devpw
          - spring.data.mongodb.database=calling
          - spring.data.mongodb.authentication-database=admin
          - spring.kafka.bootstrap-servers=ychat-kafka:29092
          - spring.kafka.consumer.group-id=calling
          - spring.kafka.consumer.auto-offset-reset=earliest
          - spring.kafka.listener.poll-timeout=3000
          - spring.kafka.listener.concurrency=3
        ports:
          - "7507:8080"
    # Payment Service
    ychat-payment-db:
        container_name: ychat-payment-db
        image: 'mongo'
        restart: unless-stopped
        environment:
          - MONGO_INITDB_ROOT_USERNAME=admin
          - MONGO_INITDB_ROOT_PASSWORD=devpw
        ports:
          - "27019:27017"
    ychat-payment:
        container_name: ychat-payment
        image: 'mrsarius/yc-payment'
        restart: unless-stopped
        pull_policy: never
        build:
            context: payment-service
            dockerfile: Dockerfile
        depends_on:
          - ychat-payment-db
        environment:
          - spring.data.mongodb.host=ychat-payment-db
          - spring.data.mongodb.port=27017
          - spring.data.mongodb.username=admin
          - spring.data.mongodb.password=devpw
          - spring.data.mongodb.database=payment
          - spring.data.mongodb.authentication-database=admin
        ports:
          - "7505:8080"
    # Media Service
    ychat-media:
        container_name: ychat-media
        image: 'mrsarius/yc-media'
        restart: unless-stopped
        pull_policy: never
        build:
            context: media-service
            dockerfile: Dockerfile
        ports:
          - "7506:8080"
        environment:
          - ychat.social.url=http://ychat-social:80
    # Social Service
    ychat-social-db:
      container_name: "ychat-social-db"
      image: postgres:16.1
      restart: unless-stopped
      environment:
        TZ: "UTC"
        POSTGRES_DB: "social-db"
        POSTGRES_INITDB_ARGS: "--locale=en_US.utf8"
        POSTGRES_USER: "ychat"
        POSTGRES_PASSWORD: "ychatformerlyknownas"
      ports:
        - "55432:5432"
      volumes:
        - ./social-db/social-db/social-db-1-config.sql:/docker-entrypoint-initdb.d/social-db-1-config.sql
        - ./social-db/social-db/social-db-2-schema.sql:/docker-entrypoint-initdb.d/social-db-2-schema.sql
    ychat-social:
      container_name: "ychat-social-service"
      image: "mrsarius/yc-social"
      restart: unless-stopped
      pull_policy: never
      build:
        context: "./social-service"
        dockerfile: "Dockerfile"
      environment:
        TZ: "UTC"
        SERVER_PORT: "80"
        SPRING_DATASOURCE_URL: "jdbc:postgresql://ychat-social-db:5432/social-db"
        SPRING_DATASOURCE_USERNAME: "ychat"
        SPRING_DATASOURCE_PASSWORD: "ychatformerlyknownas"
      ports:
        - "7502:80"
      depends_on:
        - ychat-social-db