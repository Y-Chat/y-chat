apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway-deployment
  labels:
    app: api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  strategy:
    type: RollingUpdate # if a new container is available in docker registry the update will gradually roll out
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
        - name: api-gateway
          image: mrsarius/yc-api-gateway:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: ychat.gateway.redirect.target.auth
              value: "http://auth-service:8080" # TODO remove not needed anymore
            - name: ychat.gateway.redirect.target.social
              value: "http://social-service:8080" # TODO
            - name: ychat.gateway.redirect.target.messaging
              value: "http://messaging-service:8080"
            - name: ychat.gateway.redirect.target.notification
              value: "http://notification-service:8080"
            - name: ychat.gateway.redirect.target.payment
              value: "http://payment-service:8080" # TODO
            - name: ychat.gateway.redirect.target.media
              value: "http://media-service:8080"
            - name: ychat.cors.allowed.url
              value: "https://y-chat.net"
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-service
spec:
  type: ClusterIP
  selector:
    app: api-gateway
  ports:
    - protocol: TCP
      port: 80 # port to expose to the outside
      targetPort: 8080 # port of spring boot inside the container
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-gateway-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: y-chat-ingress
    networking.gke.io/managed-certificates: main-cert
    kubernetes.io/ingress.allow-http: "false"
spec:
  rules:
    - host: api.y-chat.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: api-gateway-service
                port:
                  number: 80
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: main-cert
spec:
  domains:
    - api.y-chat.net
