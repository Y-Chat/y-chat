services:
    ychat-frontend:
        container_name: ychat-frontend
        image: 'mrsarius/yc-frontend:latest'
        restart: unless-stopped
        pull_policy: never
        build:
            context: frontend
            dockerfile: Dockerfile
        ports:
          - "3000:80"
    ychat-api-gateway:
        container_name: ychat-api-gateway
        image: 'mrsarius/yc-api-gateway'
        restart: unless-stopped
        pull_policy: never
        build:
            context: api-gateway
            dockerfile: Dockerfile
        environment:
          - ychat.gateway.redirect.target.auth=http://ychat-auth:8080
          - ychat.gateway.redirect.target.social=http://ychat-social:8080
          - ychat.gateway.redirect.target.messaging=http://ychat-messaging:8080
          - ychat.gateway.redirect.target.notification=http://ychat-notification:8080
          - ychat.gateway.redirect.target.payment=http://ychat-payment:8080
          - ychat.gateway.redirect.target.media=http://ychat-media:8080
          - ychat.cors.allowed.url=http://localhost:3000
        ports: 
          - "7500:8080"
    ychat-zookeeper:
        container_name: ychat-zookeeper
        image: 'confluentinc/cp-zookeeper:latest'
        restart: unless-stopped
        environment:
          - ZOOKEEPER_CLIENT_PORT=2181
          - ZOOKEEPER_TICK_TIME=2000
        ports:
          - "22181:2181"
    ychat-kafka:
        container_name: ychat-kafka
        image: 'confluentinc/cp-kafka:latest'
        restart: unless-stopped
        depends_on:
          - ychat-zookeeper
        environment:
          - KAFKA_BROKER_ID=1
          - KAFKA_ZOOKEEPER_CONNECT=ychat-zookeeper:2181
          - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://ychat-kafka:9092,PLAINTEXT_HOST://localhost:29092
          - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
          - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
        ports:
          - 29092:29092
    # Messaging Service
    ychat-messaging-db:
        container_name: ychat-messaging-db
        image: 'mongo'
        restart: unless-stopped
        environment:
          - MONGO_INITDB_ROOT_USERNAME=admin
          - MONGO_INITDB_ROOT_PASSWORD=devpw
        ports:
          - "27017:27017"
    ychat-messaging:
        container_name: ychat-messaging
        image: 'mrsarius/yc-messaging'
        restart: unless-stopped
        pull_policy: never
        build:
            context: messaging-service
            dockerfile: Dockerfile
        depends_on:
          - ychat-messaging-db
        environment:
          - spring.data.mongodb.host=ychat-messaging-db
          - spring.data.mongodb.port=27017
          - spring.data.mongodb.username=admin
          - spring.data.mongodb.password=devpw
          - spring.data.mongodb.database=messaging
          - spring.data.mongodb.authentication-database=admin
        ports:
          - "7503:8080"
    # Notification Service
    ychat-notification-db:
        container_name: ychat-notification-db
        image: 'mongo'
        restart: unless-stopped
        environment:
          - MONGO_INITDB_ROOT_USERNAME=admin
          - MONGO_INITDB_ROOT_PASSWORD=devpw
        ports:
          - "27018:27017"
    ychat-notification:
        container_name: ychat-notification
        image: 'mrsarius/yc-notification'
        restart: unless-stopped
        pull_policy: never
        build:
            context: notification-service
            dockerfile: Dockerfile
        depends_on:
          - ychat-notification-db
        environment:
          - spring.data.mongodb.host=ychat-notification-db
          - spring.data.mongodb.port=27018
          - spring.data.mongodb.username=admin
          - spring.data.mongodb.password=devpw
          - spring.data.mongodb.database=notification
          - spring.data.mongodb.authentication-database=admin
        ports:
          - "7504:8080"
    # Payment Service
    ychat-payment-db:
        container_name: ychat-payment-db
        image: 'mongo'
        restart: unless-stopped
        environment:
          - MONGO_INITDB_ROOT_USERNAME=admin
          - MONGO_INITDB_ROOT_PASSWORD=devpw
        ports:
          - "27019:27017"
    ychat-payment:
        container_name: ychat-payment
        image: 'mrsarius/yc-payment'
        restart: unless-stopped
        pull_policy: never
        build:
            context: payment-service
            dockerfile: Dockerfile
        depends_on:
          - ychat-payment-db
        environment:
          - spring.data.mongodb.host=ychat-payment-db
          - spring.data.mongodb.port=27019
          - spring.data.mongodb.username=admin
          - spring.data.mongodb.password=devpw
          - spring.data.mongodb.database=payment
          - spring.data.mongodb.authentication-database=admin
        ports:
          - "7505:8080"
    # Media Service
    ychat-media-db:
        container_name: ychat-media-db
        image: 'mongo'
        restart: unless-stopped
        environment:
          - MONGO_INITDB_ROOT_USERNAME=admin
          - MONGO_INITDB_ROOT_PASSWORD=devpw
        ports:
          - "27020:27017"
    ychat-media:
        container_name: ychat-media
        image: 'mrsarius/yc-media'
        restart: unless-stopped
        pull_policy: never
        build:
            context: media-service
            dockerfile: Dockerfile
        depends_on:
          - ychat-media-db
        environment:
          - spring.data.mongodb.host=ychat-media-db
          - spring.data.mongodb.port=27020
          - spring.data.mongodb.username=admin
          - spring.data.mongodb.password=devpw
          - spring.data.mongodb.database=media
          - spring.data.mongodb.authentication-database=admin
        ports:
          - "7506:8080"